language: python

sudo: required
dist: trusty
#sudo: false

#addons:
#  apt:
#    packages:
#    - build-essential
#    - python-dev
#    - openssl
#    - libssl-dev
#    - libevent-dev
# services:
#   - mongodb
# addons:
#   apt:
#     sources:
#     - mongodb-3.0-precise
#     packages:
#     - mongodb-org-server

before_install:
  - sudo apt-get update -qq
  - ./services/core/MongodbHistorian/tests/mongosetup.sh
  - sudo apt-get install -y build-essential python-dev openssl libssl-dev libevent-dev
  - python setup.py install

  # Start the mongod server using auth option.
  #- mongod --dbpath /tmp/data --bind_ip 127.0.0.1 --auth &> /dev/null &
#
# before_script:
#   - wget http://fastdl.mongodb.org/linux/mongodb-linux-x86_64-3.0.8.tgz -O /tmp/mongodb.tgz
#   - tar -xvf /tmp/mongodb.tgz
#   - mkdir /tmp/data
#   - ${PWD}/mongodb-linux-x86_64-3.0.8/bin/mongod --dbpath /tmp/data --bind_ip 127.0.0.1 --auth &> /dev/null &
#   - ${PWD}/mongodb-linux-x86_64-3.0.8/bin/mongo admin --eval 'db.createUser( {user: "mongodbadmin", pwd: "V3admin", roles: [ { role: "userAdminAnyDatabase", db: "admin" }]});'
#   - ${PWD}/mongodb-linux-x86_64-3.0.8/bin/mongo mongo_test -u mongodbadmin -p V3admin --authenticationDatabase admin --eval 'db.createUser( {user: "test", pwd: "test", roles: [ { role: "readWrite", db: "mongo_test" }]});'

script: scripts/run-tests.sh

#language: python
#matrix:
#  include:
#    - python: "2.7"
#      env: TEST_SUITE=suite_2_7
# script: env/bin/python
